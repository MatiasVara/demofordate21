/**
 * generated by Xtext 2.21.0
 */
package org.virtio.virtiodriver.ftracelanguage.frtraceLanguage.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.virtio.virtiodriver.ftracelanguage.frtraceLanguage.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class FrtraceLanguageFactoryImpl extends EFactoryImpl implements FrtraceLanguageFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static FrtraceLanguageFactory init()
  {
    try
    {
      FrtraceLanguageFactory theFrtraceLanguageFactory = (FrtraceLanguageFactory)EPackage.Registry.INSTANCE.getEFactory(FrtraceLanguagePackage.eNS_URI);
      if (theFrtraceLanguageFactory != null)
      {
        return theFrtraceLanguageFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new FrtraceLanguageFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FrtraceLanguageFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case FrtraceLanguagePackage.TRACE_MODEL: return createTraceModel();
      case FrtraceLanguagePackage.TRACE: return createTrace();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TraceModel createTraceModel()
  {
    TraceModelImpl traceModel = new TraceModelImpl();
    return traceModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Trace createTrace()
  {
    TraceImpl trace = new TraceImpl();
    return trace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FrtraceLanguagePackage getFrtraceLanguagePackage()
  {
    return (FrtraceLanguagePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static FrtraceLanguagePackage getPackage()
  {
    return FrtraceLanguagePackage.eINSTANCE;
  }

} //FrtraceLanguageFactoryImpl
